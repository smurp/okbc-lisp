#-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2)
(in-package "COMMON-LISP-USER")
#+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2)
(in-package "USER")

(eval-when (compile load eval)
  (defparameter *okbc-fun-names*
    '("CONNECTION-P"
      "CONTINUABLE-ERROR-P"
      "CURRENT-KB"
      "LOCAL-CONNECTION"
      "PROCEDURE-P"))

  (defparameter *okbc-condition-class-names*
    '("ABSTRACT-ERROR"
      "CANNOT-HANDLE"
      "CARDINALITY-VIOLATION"
      "CLASS-NOT-FOUND"
      "CONSTRAINT-VIOLATION"
      "DOMAIN-REQUIRED"
      "ENUMERATOR-EXHAUSTED"
      "FACET-ALREADY-EXISTS"
      "FACET-NOT-FOUND"
      "FRAME-ALREADY-EXISTS"
      "GENERIC-ERROR"
      "ILLEGAL-BEHAVIOR-VALUES"
      "INDIVIDUAL-NOT-FOUND"
      "KB-NOT-FOUND"
      "KB-VALUE-READ-ERROR"
      "METHOD-MISSING"
      "MISSING-FRAMES"
      "NETWORK-CONNECTION-ERROR"
      "NOT-A-FRAME-TYPE"
      "NOT-COERCIBLE-TO-FRAME"
      "NOT-UNIQUE-ERROR"
      "OBJECT-FREED"
      "READ-ONLY-VIOLATION"
      "SLOT-ALREADY-EXISTS"
      "SLOT-NOT-FOUND"
      "SYNTAX-ERROR"
      "VALUE-TYPE-VIOLATION"))

  (defparameter *okbc-condition-slot-names*
    '("BEHAVIOR"
      "CONSTRAINT"
      "CONTEXT"
      "CONTINUABLE"
      "ENUMERATOR"
      "ERRING-INPUT"
      "ERROR-MESSAGE"
      "FACET"
      "FACET"
      "FRAME"
      "FRAME-TYPE"
      "HOST"
      "KB"
      "MATCHES"
      "MISSING-CLASS"
      "MISSING-FRAMES"
      "MISSING-INDIVIDUAL"
      "OBJECT"
      "OKBCOP"
      "PATTERN"
      "PORT"
      "PROPOSED-VALUES"
      "READ-STRING"
      "SENTENCE"
      "SLOT"
      "SLOT-TYPE"))

  (defparameter *okbc-back-end-op-names*
    '("IMPLEMENT-WITH-KB-IO-SYNTAX"))
  
  (defparameter *okbc-op-names*
    '("ADD-CLASS-SUPERCLASS"
      "ADD-FACET-VALUE"
      "ADD-INSTANCE-TYPE"
      "ADD-SLOT-VALUE"
      "ALL-CONNECTIONS"
      "ALLOCATE-FRAME-HANDLE"
      "ASK"
      "ASKABLE"
      "ATTACH-FACET"
      "ATTACH-SLOT"
      "CALL-PROCEDURE"
      "CLASS-P"
      "CLOSE-CONNECTION"
      "CLOSE-KB"
      "COERCE-TO-CLASS"
      "COERCE-TO-FACET"
      "COERCE-TO-FRAME"
      "COERCE-TO-INDIVIDUAL"
      "COERCE-TO-KB-VALUE"
      "COERCE-TO-SLOT"
      "COERCIBLE-TO-FRAME-P"
      "COPY-FRAME"
      "COPY-KB"
      "CREATE-CLASS"
      "CREATE-FACET"
      "CREATE-FRAME"
      "CREATE-INDIVIDUAL"
      "CREATE-KB"
      "CREATE-KB-LOCATOR"
      "CREATE-PROCEDURE"
      "CREATE-SLOT"
      "DECONTEXTUALIZE"
      "DELETE-FACET"
      "DELETE-FRAME"
      "DELETE-SLOT"
      "DETACH-FACET"
      "DETACH-SLOT"
      "ENUMERATE-ALL-CONNECTIONS"
      "ENUMERATE-ASK"
      "ENUMERATE-CALL-PROCEDURE"
      "ENUMERATE-CLASS-INSTANCES"
      "ENUMERATE-CLASS-SUBCLASSES"
      "ENUMERATE-CLASS-SUPERCLASSES"
      "ENUMERATE-FACET-VALUES"
      "ENUMERATE-FACET-VALUES-IN-DETAIL"
      "ENUMERATE-FRAME-SLOTS"
      "ENUMERATE-FRAMES-MATCHING"
      "ENUMERATE-INSTANCE-TYPES"
      "ENUMERATE-KB-CLASSES"
      "ENUMERATE-KB-DIRECT-CHILDREN"
      "ENUMERATE-KB-DIRECT-PARENTS"
      "ENUMERATE-KB-FACETS"
      "ENUMERATE-KB-FRAMES"
      "ENUMERATE-KB-INDIVIDUALS"
      "ENUMERATE-KB-ROOTS"
      "ENUMERATE-KB-SLOTS"
      "ENUMERATE-KB-TYPES"
      "ENUMERATE-KBS"
      "ENUMERATE-KBS-OF-TYPE"
      "ENUMERATE-LIST"
      "ENUMERATE-SLOT-FACETS"
      "ENUMERATE-SLOT-VALUES"
      "ENUMERATE-SLOT-VALUES-IN-DETAIL"
      "EQL-IN-KB"
      "EQUAL-IN-KB"
      "EQUALP-IN-KB"
      "ESTABLISH-CONNECTION"
      "EXPUNGE-KB"
      "FACET-HAS-VALUE-P"
      "FACET-P"
      "FETCH"
      "FIND-KB"
      "FIND-KB-LOCATOR"
      "FIND-KB-OF-TYPE"
      "FOLLOW-SLOT-CHAIN"
      "FRAME-HAS-SLOT-P"
      "FRAME-IN-KB-P"
      "FREE"
      "FRS-INDEPENDENT-FRAME-HANDLE"
      "FRS-NAME"
      "GET-BEHAVIOR-SUPPORTED-VALUES"
      "GET-BEHAVIOR-VALUES"
      "GET-CLASS-INSTANCES"
      "GET-CLASS-SUBCLASSES"
      "GET-CLASS-SUPERCLASSES"
      "GET-CLASSES-IN-DOMAIN-OF"
      "GET-FACET-VALUE"
      "GET-FACET-VALUES"
      "GET-FACET-VALUES-IN-DETAIL"
      "GET-FRAME-DETAILS"
      "GET-FRAME-HANDLE"
      "GET-FRAME-IN-KB"
      "GET-FRAME-NAME"
      "GET-FRAME-PRETTY-NAME"
      "GET-FRAME-SENTENCES"
      "GET-FRAME-SLOTS"
      "GET-FRAME-TYPE"
      "GET-FRAMES-MATCHING"
      "GET-FRAMES-WITH-FACET-VALUE"
      "GET-FRAMES-WITH-SLOT-VALUE"
      "GET-INSTANCE-TYPES"
      "GET-KB-BEHAVIORS"
      "GET-KB-CLASSES"
      "GET-KB-DIRECT-CHILDREN"
      "GET-KB-DIRECT-PARENTS"
      "GET-KB-FACETS"
      "GET-KB-FRAMES"
      "GET-KB-INDIVIDUALS"
      "GET-KB-ROOTS"
      "GET-KB-SLOTS"
      "GET-KB-TYPE"
      "GET-KB-TYPES"
      "GET-KBS"
      "GET-KBS-OF-TYPE"
      "GET-PROCEDURE"
      "GET-SLOT-FACETS"
      "GET-SLOT-TYPE"
      "GET-SLOT-VALUE"
      "GET-SLOT-VALUES"
      "GET-SLOT-VALUES-IN-DETAIL"
      "GOTO-KB"
      "HAS-MORE"
      "INDIVIDUAL-P"
      "INSTANCE-OF-P"
      "KB-MODIFIED-P"
      "KB-P"
      "MEMBER-BEHAVIOR-VALUES-P"
      "MEMBER-FACET-VALUE-P"
      "MEMBER-SLOT-VALUE-P"
      "META-KB"
      "NEXT"
      "OKBC-CONDITION-P"
      "OPEN-KB"
      "OPENABLE-KBS"
      "PREFETCH"
      "PRIMITIVE-P"
      "PRINT-FRAME"
      "PUT-BEHAVIOR-VALUES"
      "PUT-CLASS-SUPERCLASSES"
      "PUT-FACET-VALUE"
      "PUT-FACET-VALUES"
      "PUT-FRAME-DETAILS"
      "PUT-FRAME-NAME"
      "PUT-FRAME-PRETTY-NAME"
      "PUT-INSTANCE-TYPES"
      "PUT-SLOT-VALUE"
      "PUT-SLOT-VALUES"
      "REGISTER-PROCEDURE"
      "REMOVE-CLASS-SUPERCLASS"
      "REMOVE-FACET-VALUE"
      "REMOVE-INSTANCE-TYPE"
      "REMOVE-LOCAL-FACET-VALUES"
      "REMOVE-LOCAL-SLOT-VALUES"
      "REMOVE-SLOT-VALUE"
      "RENAME-FACET"
      "RENAME-SLOT"
      "REPLACE-FACET-VALUE"
      "REPLACE-SLOT-VALUE"
      "REVERT-KB"
      "SAVE-KB"
      "SAVE-KB-AS"
      "SLOT-HAS-FACET-P"
      "SLOT-HAS-VALUE-P"
      "SLOT-P"
      "SUBCLASS-OF-P"
      "SUPERCLASS-OF-P"
      "TELL"
      "TELLABLE"
      "TYPE-OF-P"
      "UNREGISTER-PROCEDURE"
      "UNTELL"
      "VALUE-AS-STRING"))

  (defpackage :OKBC (:use))

  (loop for string in (append *okbc-fun-names*
			      *okbc-op-names*
			      *okbc-condition-class-names*
			      *okbc-condition-slot-names*)
	for sym = (intern string :okbc)
	do (export sym :okbc)))

(eval-when (compile load eval)
  (defpackage :ok-back (:use)
    (:export
     ;; And now some class names.....
     "ABSTRACT-KB-KB"
     "ABSTRACT-CLOS-KB-KB"
     "ABSTRACT-HANDLE"
     "ABSTRACT-INSTANCE-RECORDING-CLOS-KB-KB"
     "ABSTRACT-KB-CLASS-NAME-FROM-KB"
     "ABSTRACT-KB-LOCATOR"
     "ABSTRACT-META-KB-KB"
     "ABSTRACT-NETWORK-CONNECTION"
     "ABSTRACT-TUPLE-KB-KB"
     "CACHING-MIXIN"
     "CACHING-STRUCTURE-KB"
     "CLOS-KB"
     "CLOS-ONLY-OKBC-MIXIN"
     "CONCRETE-KB-CLASS-FROM-ABSTRACT-KB-CLASS-NAME"
     "CONNECTION"
     "DEFAULT-INHERITANCE-MIXIN"
     "DEFAULT-INHERITANCE-STRUCTURE-KB"
     "EXHAUSTIVE-ENUMERATOR"
     "FILE-KB-LOCATOR"
     "FILE-MIXIN"
     "FILE-STRUCTURE-KB"
     "FILE-TELL&ASK-DEFAULTS-STRUCTURE-KB"
     "FRAME-HANDLE"
     "FRAME-NAME-INTERNING-MIXIN"
     "FRAMES-HAVE-CLOS-SLOTS-AS-OKBC-SLOTS-MIXIN"
     "HANDLE-NUMBER-OF-VALUES-MIXIN"
     "HANDLES-IN-TREE-P"
     "INSTANCE-RECORDING-CLOS-KB"
     "KB-HAS-BEEN-MODIFIED-P"
     "KB-NETWORK-KB"
     "LOCAL-CONNECTION-P"
     "META-KB"
     "NETWORK-COERCION-MIXIN"
     "NETWORK-ENUMERATOR"
     "NETWORK-KB"
     "NETWORK-STANDARD-DEFAULTS-KB"
     "NETWORK-STRUCTURE-KB"
     "NETWORK-TELL&ASK-DEFAULTS-KB"
     "OKBC-FORWARDING-MIXIN"
     "OKBC-KB-MIXIN"
     "OKBC-SIDE-EFFECTS-CAUSE-ERROR-MIXIN"
     "QUASI-SYMBOL"
     "REMOTE-VALUE"
     "SIMPLE-NETWORK-CONNECTION"
     "STANDARD-DEFAULTS-KB"
     "STRUCTURE-KB"
     "STRUCTURE-TUPLE-KB"
     "TARGET-KB"
     "TELL&ASK-DEFAULTS-KB"
     "TELL&ASK-DEFAULTS-STRUCTURE-KB"
     "TUPLE-KB"

     ;; Slots
     "TARGET-KB"
     "NAME"
     "KB-TYPE"
     "FRAME-HANDLE-ID"
     "FRAME-HANDLE-FRAME-TYPE"
     "FRAME-HANDLE-KB-ID"
     "FRAME-HANDLE-PLIST"
     "FRAME-HANDLE-THING"
     "FILE-KB-LOCATOR-PATHNAME"
     "QUASI-SYMBOL-NAME"
     "QUASI-SYMBOL-PACKAGE"
     "PLIST"
     "UNIQUE-ID"

     ;; Useful macros
     "PROCEDURE";; also a defstruct
     "WITH-CURRENT-KB"
     "WITH-KB-IO-SYNTAX"
     "DEFINE-DEFAULT-INHERITANCE-METHODS"
     "DEFOKBCCLASS"
     "DEFOKBCOP"
     "DEFNETWORK-OKBC-KB"
     "DEFNETWORK-OKBC-STRUCTURE-KB"
     "DEFAULT-NOTIFICATION-CALLBACK-FUNCTION"
     "DEFINE-DEFAULT-INHERITANCE-METHODS"
     "DEFBLOCK-OF-OKBC-METHODS"

     ;; Random functions and generic-functions
     "ADD-NOTIFICATIONS-FOR-OKBC-SIDE-EFFECT"
     "ASSERT-FORM-GIVEN-KB"
     "ASSERT-FRAME-DEFINITION"
     "CONCRETE-KB-CLASS-FROM-ABSTRACT-KB-CLASS-NAME"
     "CREATE-FRAME-HANDLE"
     "CREATE-FRAME-PRIMITIVE-P-SENTENCES"
     "DECONTEXTUALIZE-AUX"
     "DIRECTLY-GET-FRAME-SLOTS"
     "ENSURE-HAS-FACET"
     "ENSURE-HAS-SLOT"
     "FAST-HASH-KEY"
     "FIND-CONNECTION"
     "FIND-CONNECTION-KEY"
     "FIND-OR-CREATE-FRAME-HANDLE"
     "FRAME-HANDLE-P"
     "FRAME-HANDLE-READER"
     "GET-FRAMES-MATCHING-FOR-FRAME-NAMES-REQUIRED"
     "GET-FRAMES-MATCHING-THE-HARD-WAY"
     "GET-FRAMES-WITH-FACET-VALUE-INTERNAL-DIRECT"
     "GET-FRAMES-WITH-SLOT-VALUE-INTERNAL-DIRECT"
     "HANDLE-SIMPLE-QUERY"
     "HANDLE-UNHANDLED-QUERY"
     "HANDLE-UNHANDLED-SENTENCE"
     "INFERENCE-LEVEL-FOR-TELL&ASK-DEFAULTS"
     "INTERN-FRAME-HANDLES-IF-NECESSARY"
     "INTERN-PROCEDURE"
     "INTERN-QUASI-SYMBOL"
     "INTERN-REMOTE-VALUE"
     "KB-LOCATOR-CLASS-FOR-KB-TYPE"
     "LOAD-KB-FROM-FILE"
     "LOAD-OKBC-KB-FROM-STREAM"
     "LOAD-OKBC-KB-INTERNAL"
     "MAKE-FILE-KB-LOCATOR"
     "MAKE-STRUCTURE-TUPLE-KB"
     "NOTIFICATION-CALLBACK-FUNCTION"
     "OPEN-P"
     "POSSIBILITIES-FOR-PATTERN-MATCHING"
     "PRINT-FRAME-HANDLE"
     "PRINT-ABSTRACT-HANDLE-FOR-KB"
     "PRINT-CONS-TO-STREAM"
     "PRINT-FRAME-TO-STREAM"
     "PRINT-QUASI-SYMBOL-IN-KB"
     "PRINT-VALUE-TO-STREAM"
     "QUASI-SYMBOL-READER"
     "RELATION-TRANSITIVE-CLOSURE"
     "TIMEOUT-FOR-TELL&ASK-DEFAULTS"
     "TYPE-OF-NAME"
     "WALK-FORM-FOR-INTERNING-GIVEN-KB"
     ;; Useful vars/constants
     "$META-KB$"
     "*ABSTRACT-KB-CLASS-NAMES*"
     "*ALL-KNOWN-OKBC-COMPLIANCE-CLASSES*"
     "*OKBC-PACKAGE*"
     "*KEYWORD-PACKAGE*"
     "*CURRENT-KB*"
     "*CURRENT-KB-FOR-IO-SYNTAX*"
     "*CURRENT-LOCATION*"
     "*CURRENT-PURPOSE-FOR-IO-SYNTAX*"
     "*DEFAULT-KB*"
     "*EXISTING-CONNECTIONS*"
     "*EVALUABLE-PREDICATE-SYMBOLS*"
     "*KIF-META-EXTENSION-SYMBOLS*"
     "*KIF-OPERATOR-SYMBOLS*"
     "*LOCATION-LIST*"
     "*NETWORK-OKBC-KB-MIXINS*"
     "*PRINT-PRETTY-FRAME-HANDLES*"
     "*OKBC-CLASS-RELATION-SYMBOLS*"
     "*OKBC-RELATION-SYMBOLS*"
     "*OKBC-STANDARD-CLASS-DIRECT-SUPERCLASS-ALIST*"
     "*OKBC-STANDARD-CLASS-NAMES*"
     "*OKBC-STANDARD-FACET-NAMES*"
     "*OKBC-STANDARD-NAMES*"
     "*OKBC-STANDARD-SLOT-NAMES*"
     "*UNDEFINED-VALUE*"))

  (loop for string in *okbc-back-end-op-names*
	for sym = (intern string :ok-back)
	for intsym = (intern (concatenate 'string string "-INTERNAL") :ok-back)
	do (export sym :ok-back)
	   (export intsym :ok-back))

  (loop for string in *okbc-op-names*
	for sym = (intern (concatenate 'string string "-INTERNAL") :ok-back)
	do (export sym :ok-back))

  (loop for string in (append *okbc-fun-names*
			      *okbc-condition-class-names*
			      *okbc-condition-slot-names*)
	for sym = (intern string :okbc)
	do (import sym :ok-back)
	(export sym :ok-back)))

(defpackage :TRIES
  (:use #+Lucid :LCL
	#+Logical-Pathname :Logical-Pathname
	#+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
        #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP")
  (:import-from :ok-back "FAST-HASH-KEY")
  (:export
   ;; General
   "RECONSTITUTE-FROM-HASH-KEY"
   "LINEARIZE-SEXPR"
   "DELINEARIZE-SEXPR"
   "+NO-VALUE+"
   
   ;; For the Consified version
   "COPY-DEEP-TRIE"
   "DELETE-TRIE"
   "DISMANTLE-TRIE"
   "GET-TRIE"
   "GET-TRIE-RETURNING-NODE"
   "GET-TRIE-RETURNING-NODE-NO-EXTEND"
   "MAKE-TRIE"
   "MAKE-TRIE-REMOVE-DUPLICATE-STATE"
   "MAPTRIE"
   "MAPTRIE-NODES"
   "MAPTRIE-NODES-REMOVE-IF"
   "MAPTRIE-VALUES"
   "MEMBER-USING-STATE"
   "PUSHNEW-USING-STATE"
   "REMOVE-DUPLICATES-USING-STATE"
   "REMOVE-DUPLICATES-EQUAL-USING-TRIE"
   "REMOVE-DUPLICATES-EQUAL-USING-TRIE*"
   "REMOVE-DUPLICATES-USING-TRIE-AND-COERCION"
   "REMOVE-USING-STATE"
   "SET-TRIE-VALUE"
   "TRIE"
   "TRIE-ALL-VALUES"
   "TRIE-ARCS"
   "TRIE-ARCS-HASHED-P"
   "TRIE-NODE-COUNT"
   "TRIE-VALUE"

   "MAKE-TRIE-REMOVE-DUPLICATE-STATE"
   "TRIE-REMOVE-DUPLICATE-STATE"
   "TRIE-REMOVE-DUPLICATE-STATE-COUNT"
   "TRIE-REMOVE-DUPLICATE-STATE-UNIQUE"

   ;; For the defstruct version
   "COPY-DEEP-STRUCTURE-TRIE"
   "DELETE-STRUCTURE-TRIE"
   "DISMANTLE-STRUCTURE-TRIE"
   "GET-STRUCTURE-TRIE"
   "GET-STRUCTURE-TRIE-RETURNING-NODE"
   "GET-STRUCTURE-TRIE-RETURNING-NODE-NO-EXTEND"
   "MAKE-STRUCTURE-TRIE"
   "MAPSTRUCTURE-TRIE"
   "MAPSTRUCTURE-TRIE-NODES"
   "MAPSTRUCTURE-TRIE-NODES-REMOVE-IF"
   "MAPSTRUCTURE-TRIE-VALUES"
   "REMOVE-DUPLICATES-EQUAL-USING-STRUCTURE-TRIE"
   "REMOVE-DUPLICATES-EQUAL-USING-STRUCTURE-TRIE*"
   "REMOVE-DUPLICATES-USING-STRUCTURE-TRIE-AND-COERCION"
   "SET-STRUCTURE-TRIE-VALUE"
   "STRUCTURE-TRIE"
   "STRUCTURE-TRIE-ALL-VALUES"
   "STRUCTURE-TRIE-ARCS"
   "STRUCTURE-TRIE-ARCS-HASHED-P"
   "STRUCTURE-TRIE-NODE-COUNT"
   "STRUCTURE-TRIE-VALUE"
   "STRUCTURE-TRIE-P"

   ;; For the reader macro controlled version
   "COPY-DEEP-HYBRID-TRIE"
   "DELETE-HYBRID-TRIE"
   "DISMANTLE-HYBRID-TRIE"
   "GET-HYBRID-TRIE"
   "GET-HYBRID-TRIE-RETURNING-NODE"
   "GET-HYBRID-TRIE-RETURNING-NODE-NO-EXTEND"
   "MAKE-HYBRID-TRIE"
   "MAPHYBRID-TRIE"
   "MAPHYBRID-TRIE-NODES"
   "MAPHYBRID-TRIE-NODES-REMOVE-IF"
   "MAPHYBRID-TRIE-VALUES"
   "NEW-ROOT-HYBRID-TRIE"
   "REMOVE-DUPLICATES-EQUAL-USING-HYBRID-TRIE"
   "REMOVE-DUPLICATES-EQUAL-USING-HYBRID-TRIE*"
   "REMOVE-DUPLICATES-USING-HYBRID-TRIE-AND-COERCION"
   "SET-HYBRID-TRIE-VALUE"
   "HYBRID-TRIE"
   "HYBRID-TRIE-ALL-VALUES"
   "HYBRID-TRIE-ARCS"
   "HYBRID-TRIE-ARCS-HASHED-P"
   "HYBRID-TRIE-NODE-COUNT"
   "HYBRID-TRIE-STASH"
   "HYBRID-TRIE-VALUE"
   "HYBRID-TRIE-P"

   ;; For the root version
   "ROOT-TRIE"
   "MAKE-ROOT-TRIE"
   "NEW-ROOT-TRIE"
   "ROOT-TRIE-PURPOSE"
   "ROOT-TRIE-UP"))

(defpackage :OK-UTILS
    (:use #+Lucid :LCL
	  #+Logical-Pathname :Logical-Pathname
	  #+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
	  #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP"
	  :OKBC :TRIES)
  (:import-from #+MCL "CCL" #+(or TI Lucid EXCL Harlequin-Common-Lisp) "CLOS"
		"CLASS-DIRECT-SLOTS"
		"CLASS-DIRECT-SUBCLASSES"
		"CLASS-PROTOTYPE"
		"CLASS-SLOTS"
		#+EXCL "CLASS-OF"
		#+EXCL "METHOD-QUALIFIERS"
		"SLOT-DEFINITION-ALLOCATION"
		"SLOT-DEFINITION-NAME"
		#-MCL "GENERIC-FUNCTION-NAME")
  (:import-from :ok-back
		"DEFOKBCCLASS"
		"FAST-HASH-KEY"
		"NAME"
		"PROCEDURE"
		"WITH-KB-IO-SYNTAX")
  (:export
   "*CURRENT-LANGUAGE*"
   "*ERR-ON-PARSER-ERROR-P*"
   "*ERR-ON-READ-ONLY-VIOLATIONS-P*"
   "*EXPRESSION-BEING-WALKED*"
   "*GETTING-BETTER-IS-OK-P*"
   "*INHIBIT-READ-ONLYNESS-P*"
   "*OKBC-LISTENER-PROMPT*"
   "*LOADING-KB*"
   "*OUTER-PACKAGE*"
   "*PARSER-WARN-FUNCTION*"
   "*REPLACE-KIF-SYMBOLS-WITH-KEYWORDS-P*"
   "ABSTRACT-KIF-LANGUAGE"
   "ABSTRACT-LANGUAGE"
   "ALL-COMPLIANT-OKBC-IMPLEMENTATIONS"
   "ANONYMOUS-VARIABLE?"
   "ANSI-KIF-LANGUAGE"
   "ASSERT-DELAYED-SENTENCES"
   "ASSERT-KIF-DEFINITIONS-AS-SENTENCES-MIXIN"
   "BASE-STRING-ELEMENT-TYPE"
   "CANONICALIZE-PATTERN"
   "CAUSES-SIDE-EFFECTS-P"
   "CHECK-ASSERTION-OF-CONSTRAINT-FACET-VALUES"
   "CHECK-ASSERTION-OF-CONSTRAINT-SLOT-VALUES"
   "CLEAR-QUEUE"
   "CML-LANGUAGE"
   "COMPLIANT-OKBC-IMPLEMENTATION-P"
   "CONJUNCTION-TO-LIST"
   "CONTINUABLE-ASSERT"
   "CONTINUABLE-ASSERT"
   "CONTINUABLE-ERROR"
   "DECANONICALIZE-TESTFN"
   "DECODE-DATA-STRUCTURE-FROM-STREAM"
   "DEF-TRIVIAL-DIADIC"
   "DEF-TRIVIAL-EVAL-FOR-OKBC-CONS"
   "DEF-TRIVIAL-MONADIC"
   "DEF-TRIVIAL-NO-ARGS"
   "DEFDOC"
   "DEFDOCMETHOD"
   "DEFEVALUABLE-PREDICATE"
   "DEFINE-CONDITION-OKBC"
   "DEFMETHOD-WITH-CACHE-METHOD"
   "DEFMETHODS"
   "DEFOKBCCLASS"
   "DEFOKBCFUN"
   "DEFOKBCGENERIC"
   "DEQUEUE"
   "DEQUOTE"
   "DISPATCH-MACRO-CHARACTER-P"
   "DO-LIST"
   "EMPTY-QUEUE-P"
   "ENCODE-DATA-STRUCTURE-TO-STREAM"
   "ENFORCE-DOMAIN-CONSTRAINT"
   "ENFORCE-SLOT-CONSTRAINTS"
   "ENQUEUE"
   "ENSURE-SLOTS-AND-FACETS-EXIST-FOR-FRAME-DEFINITION"
   "EXPLAIN-LANGUAGE"
   "FAST-EQUAL"
   "FAST-GETHASH-FOR-SYMBOL"
   "FAST-HASH-KEY"
   "FAST-READ-CHAR"
   "FAST-READ-LINE"
   "FAST-TERPRI"
   "FAST-WRITE-CHAR"
   "FAST-WRITE-FIXNUM"
   "FAST-WRITE-STRING"
   "FIND-LANGUAGE"
   "FIRST-IF-LIST"
   "FRAME-REFERENCE-P"
   "FUNCTION-CONSTANT-P"
   "GENERIC-ERROR"
   "GET-DIRECT-SLOT-VALUES-IN-DETAIL"
   "GETPID"
   "GROUND?"
   "INITIALIZE-SLOTS-AND-FACETS"
   "INSIDE-OKBC-SERVER-P"
   "INTERNAL-NAME-TO-OP-NAME"
   "IS-IN-TREE"
   "KB-SPECIALIZING-ARGUMENTS"
   "KIF-3.0-LANGUAGE"
   "KIF-VARIABLE-P"
   "KILL-NOKBC-SERVER"
   "LIST-IF-NOT"
   "LIST-TO-CONJUNCTION"
   "LOAD-OKBC-KB"
   "LOAD-OKBC-KB-HANDLE-IN-KB-FORM"
   "LOAD-OKBC-KB-HANDLE-IN-LANGUAGE-FORM"
   "LOAD-OKBC-KB-HANDLE-IN-PACKAGE-FORM"
   "MAKE-QUEUE"
   "MARK-TO-REQUIRE-REHASH"
   "MARK-TRIE-TO-REQUIRE-REHASH"
   "NAME"
   "NOKBC-SERVER"
   "NTH-REST"
   "OBJECT-CONSTANT-P"
   "OKBC-ASSERT"
   "OKBC-LANGUAGE"
   "OKBC-LISTENER"
   "OKBC-SENTENCE-P"
   "OKBC-WITH-ANSI-KIF-LANGUAGE"
   "OKBCOP-ARGS"
   "OP-NAME-TO-INTERNAL-NAME"
   "PARSER-CONS"
   "PARSER-LIST"
   "PARSER-LIST*"
   "PARSER-WARN"
   "PROCEDURE"
   "QUEUE-APPEND"
   "QUEUE-BACK"
   "QUEUE-CONTENTS"
   "QUEUE-DELETE"
   "QUEUE-FRONT"
   "QUEUE-NCONC"
   "READ-ALL-FORMS-FROM-STREAM"
   "READ-ALL-FORMS-FROM-STREAM-P"
   "READ-FORM-FROM-STREAM-IN-LANGUAGE"
   "READ-ONLY-P"
   "RELATION-CONSTANT-P"
   "REMOVE-COERCION-SPECS"
   "REMOVE-KEYWORDS-AND-DEFAULTS"
   "REORDER-FORMS-BEFORE-ASSERTING-THEM"
   "SAFELY-READ-FROM-STRING"
   "SELF-EVALUATING-P"
   "SENTENCE-OP-TYPE"
   "SEQUENCE-VARIABLE-P"
   "SPLIT-INTO-LINES"
   "SUBLIS-HANDLING-QUOTE"
   "TUPLE-STORE"
   "UNDERLYING-STREAM"
   "UNIFY"
   "UNIFY-AGAINST-LITERAL"
   "VALUE-MATCHES-TYPE-CONSTRAINT-P"
   "VARIABLE?"
   "VARIABLEP"
   "VARIABLES-IN"
   "WALK-FORM"
   "WALK-FORM-FOR-LOAD"
   "WALK-KEY/VALUE-PLIST"
   "WALK-KEY/VALUE-PLIST-PAIR"
   "WALK-LIST-OF-SENTENCES"
   "WALK-SUBEXPRESSION"
   "WHILE"
   "WHILE-COLLECT"
   "WITH-CONDITION-SLOTS"
   "WITH-CONNECTION-TO-SOCKET"
   "WITH-DEFOKBCOP-BINDINGS"
   "WITH-KB-IO-SYNTAX"
   "WITH-KIF-REPLACEMENT"
   "WITH-READ-ONLY-CHECKING"
   "WITH-SUBSTITUTION-GROUPS"
   "WITH-TIMEOUT"
   "WITHOUT-RECURSION-IN-STACK"
   "WITHOUT-RECURSION-USING-TRIE"
   "WITHOUT-SCHEDULING"
   "WORD-MATCHES-PATTERN"))

(defpackage :OK-kernel
    (:use #+Lucid :LCL
	  #+Logical-Pathname :Logical-Pathname
	  #+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
	  #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP"
	  :ok-back :ok-utils :tries)
  (:import-from #+MCL "CCL" #+(or TI Lucid EXCL Harlequin-Common-Lisp) "CLOS"
		"CLASS-DIRECT-SLOTS"
		"CLASS-DIRECT-SUBCLASSES"
		"CLASS-PROTOTYPE"
		"CLASS-SLOTS"
		#+EXCL "CLASS-OF"
		#+EXCL "METHOD-QUALIFIERS"
		"SLOT-DEFINITION-ALLOCATION"
		"SLOT-DEFINITION-NAME"
		#-MCL "GENERIC-FUNCTION-NAME")
  (:import-from :okbc
		"KB-P")
  #+Harlequin-Common-Lisp
  (:import-from :lispworks "FIXNUMP")
  #+EXCL
  (:import-from "EXCL" "ARGLIST")
  #+(and Logical-Pathname (or Lucid Franz-Inc))
  (:shadowing-import-from :Logical-Pathname
			  logical-pathname translate-logical-pathname
			  logical-pathname-translations wild-pathname-p)
  #+(and Lucid Clim)
  (:shadowing-import-from :Clim-Lisp define-compiler-macro))

(loop for string in (append *okbc-fun-names*
			    *okbc-condition-class-names*
			    *okbc-condition-slot-names*)
      for sym = (intern string :okbc)
      do (import sym :ok-kernel))

(defpackage :tuple-store
    (:use #+Lucid :LCL
	  #+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
	  #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP"
	  :ok-utils :tries)
  (:import-from :ok-back
		"GET-KB-DIRECT-PARENTS-INTERNAL")
  (:export
	   "AT-LEAST-ONE-BINDING-AVAILABLE-P"
	   "CHECK-INCLUDED-KBS-P"
	   "COMPILE-PATTERN"
	   "DROP"
	   "ENSURE-FULL-INDEX"
	   "FACTS-FULL-INDEXED-UNDER"
	   "FACTS-LOCALLY-FULL-INDEXED-UNDER"
	   "FETCH-ONE-BINDING"
	   "FETCH-ONE-BINDINGM"
	   "GET-ALL-ATOMS"
	   "INDEXED-IN-TUPLE-STORE-P"
	   "INSERT"
	   "MAKE-TUPLE-STORE"
	   "MAYBE-POST-HOC-FULL-INDEX-KB"
	   "PRIMITIVE-DB-OBJECT"
	   "TUPLE-STORE"
	   "TUPLE-STORE-ALL-PARENTS"
	   "TUPLE-STORE-DIRECT-PARENTS"
	   "TUPLE-STORE-FULL-INDEX-P"
	   "TUPLE-STORE-KB"
           "TUPLE-STORE-FETCH"
	   "TUPLE-STORE-FETCHM"
	   "WITH-KBS-TO-SEARCH"))

(defpackage :tuple-kb
    (:use #+Lucid :LCL
	  #+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
	  #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP"
	  :OK-back :ok-utils :tuple-store)
  #+Harlequin-Common-Lisp
  (:import-from :lispworks "FIXNUMP")
  (:export "TUPLE-STORE"
	   "TUPLE-KB-TUPLE-STORE"
	   "TUPLE-KB-PARENT-KBS"
	   "PARENT-KBS"
	   "STRUCTURE-TUPLE-KB-PARENT-KBS"
	   "GET-CLASS-INSTANCES-INTERNAL-IMPLEMENTATION"
	   "GET-SIMPLE-FRAME-WITH-SLOT-VALUE"
	   "STRUCTURE-TUPLE-KB-P"
	   "TUPLE-KB-P"))

(defpackage :OK-CACHE (:use)
  (:export "*ALLOW-OKBC-CACHING-P*"
	   "*EPHEMERAL-CACHE*"
	   "ALLOW-CACHING-P"
	   "CACHE"
	   "CACHE-ENTRY-FOUND-P"
	   "CACHE-FILL-HOOK"
	   "CACHE-MISS-HOOK"
	   "CACHING-POLICY"
	   "FLUSH-CACHE"
	   "FLUSH-ANY-NECESSARY-CACHES"
	   "REGISTER-SIDE-EFFECT"
	   "TIMESTAMP"
	   "ENCACHE-CLASS-P-INTERNAL"
	   "ENCACHE-COERCE-TO-CLASS-INTERNAL"
	   "ENCACHE-COERCE-TO-FACET-INTERNAL"
	   "ENCACHE-COERCE-TO-FRAME-INTERNAL"
	   "ENCACHE-COERCE-TO-INDIVIDUAL-INTERNAL"
	   "ENCACHE-COERCE-TO-SLOT-INTERNAL"
	   "ENCACHE-COERCIBLE-TO-FRAME-P-INTERNAL"
	   "ENCACHE-FACET-P-INTERNAL"
	   "ENCACHE-GET-CLASS-SUBCLASSES-INTERNAL"
	   "ENCACHE-GET-CLASS-SUPERCLASSES-INTERNAL"
	   "ENCACHE-GET-FACET-VALUES-INTERNAL"
	   "ENCACHE-GET-FRAME-HANDLE-INTERNAL"
	   "ENCACHE-GET-FRAME-NAME-INTERNAL"
	   "ENCACHE-GET-FRAME-PRETTY-NAME-INTERNAL"
	   "ENCACHE-GET-FRAME-SLOTS-INTERNAL"
	   "ENCACHE-GET-FRAME-TYPE-INTERNAL"
	   "ENCACHE-GET-INSTANCE-TYPES-INTERNAL"
	   "ENCACHE-GET-SLOT-FACETS-INTERNAL"
	   "ENCACHE-GET-SLOT-TYPE-INTERNAL"
	   "ENCACHE-GET-SLOT-VALUES-INTERNAL"
	   "ENCACHE-INDIVIDUAL-P-INTERNAL"
	   "ENCACHE-PRIMITIVE-P-INTERNAL"
	   "ENCACHE-SLOT-P-INTERNAL"))

(defpackage :OKBC-test
    (:use #+Lucid :LCL
	  #+Logical-Pathname :Logical-Pathname
	  #+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
	  #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP"
	  :OKBC :ok-utils :ok-cache)
  (:export "TEST"
	   "TEST-KB"))

(defpackage :OKBC-user
    (:use #+Lucid :LCL
	  #+Logical-Pathname :Logical-Pathname
	  #+(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "LISP" 
	  #-(or LCL4.0 ALLEGRO-V3.1 ALLEGRO-V3.2 TI) "COMMON-LISP"
	  :OKBC))

